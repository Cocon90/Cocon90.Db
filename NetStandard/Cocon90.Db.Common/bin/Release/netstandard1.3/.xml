<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cocon90.Db.Common</name>
    </assembly>
    <members>
        <member name="T:Cocon90.Db.Common.Attribute.ColumnAttribute">
            <summary>
            column option attribute.
            </summary>
        </member>
        <member name="P:Cocon90.Db.Common.Attribute.ColumnAttribute.DirverType">
            <summary>
            option the database type to which the current attribute tag is applied priority.
            </summary>
        </member>
        <member name="P:Cocon90.Db.Common.Attribute.ColumnAttribute.ColumnName">
            <summary>
            option the name of the column in the table, and if it is not set, the attribute name is automatically used.
            </summary>
        </member>
        <member name="P:Cocon90.Db.Common.Attribute.ColumnAttribute.PrimaryKey">
            <summary>
            option the table primary key. A table can have more than one primary key
            </summary>
        </member>
        <member name="P:Cocon90.Db.Common.Attribute.ColumnAttribute.CreateDDL">
            <summary>
            option how to create table use sql ddl except ColumnName. like setting 'int not null default 0' in mysql and sqlite or 'int not null default (0)' in sqlserver.
            </summary>
        </member>
        <member name="P:Cocon90.Db.Common.Attribute.ColumnAttribute.IndexName">
            <summary>
            option the index name for the column. if setting same indexName for different column, it's will generate one index in a group. 
            </summary>
        </member>
        <member name="T:Cocon90.Db.Common.Attribute.IgnoreAttribute">
            <summary>
            If set to True, the current column is ignored automatically
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Attribute.IgnoreAttribute.#ctor(System.Boolean)">
            <summary>
            If set to True, the current column is ignored automatically
            </summary>
            <param name="isIgnore"></param>
        </member>
        <member name="P:Cocon90.Db.Common.Attribute.IgnoreAttribute.IsIgnore">
            <summary>
            If set to True, the current column is ignored automatically
            </summary>
        </member>
        <member name="T:Cocon90.Db.Common.Attribute.TableAttribute">
            <summary>
            Sets the name of the configuration table, and the schema name of the table.
            </summary>
        </member>
        <member name="P:Cocon90.Db.Common.Attribute.TableAttribute.TableName">
            <summary>
            Configuration the name of the table
            </summary>
        </member>
        <member name="P:Cocon90.Db.Common.Attribute.TableAttribute.SchemaName">
            <summary>
            Sets the name of the schema name of the table.
            </summary>
        </member>
        <member name="T:Cocon90.Db.Common.Data.DirverType">
            <summary>
            数据库的类型
            </summary>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Params.Name">
            <summary>
            参数键.请用@开头。
            </summary>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Params.Value">
            <summary>
            参数值.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Params.op_Implicit(System.Data.Common.DbParameter)~Cocon90.Db.Common.Data.Params">
            <summary>
            定义由DbParameter到Parameter的隐式转换
            </summary>
            <param name="dbParameter"></param>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Db.Common.Data.Schema.MCell">
            <summary>
            Class MCell.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MCell.#ctor(Cocon90.Db.Common.Data.Schema.MColumn,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Cocon90.Db.Common.Data.Schema.MCell"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Schema.MCell.Column">
            <summary>
            Gets or sets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Schema.MCell.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MCell.ValueOfString">
            <summary>
            Gets the value of string.
            </summary>
            <value>The value of string.</value>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MCell.ValueOfInt(System.Int32)">
            <summary>
            Values the of int.
            </summary>
            <param name="defaultValue">The default value.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MCell.ValueOfInt">
            <summary>
            Values the of int.
            </summary>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MCell.ValueOfDouble(System.Double)">
            <summary>
            Values the of double.
            </summary>
            <param name="defaultValue">The default value.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MCell.ValueOfDouble">
            <summary>
            Values the of double.
            </summary>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MCell.ValueOfBool(System.Boolean)">
            <summary>
            Values the of bool.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MCell.ValueOfBool">
            <summary>
            Values the of bool.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MCell.ValueOf(System.Type,System.Boolean)">
            <summary>
            Values the of targetType.
            </summary>
            <param name="targetType">Type of the target.</param>
            <param name="isThrewException">if set to <c>true</c> [is threw exception].</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MCell.ValueOf``1(``0)">
            <summary>
            Values the of type.
            </summary>
        </member>
        <member name="T:Cocon90.Db.Common.Data.Schema.MColumn">
            <summary>
            Class MColumn.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MColumn.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Cocon90.Db.Common.Data.Schema.MColumn"/> class.
            </summary>
            <param name="caption">The caption.</param>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Schema.MColumn.Caption">
            <summary>
            Gets or sets the caption.
            </summary>
            <value>The caption.</value>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Schema.MColumn.DataType">
            <summary>
            Gets or sets the type of the data.
            </summary>
            <value>The type of the data.</value>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MColumn.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Cocon90.Db.Common.Data.Schema.MDataSet">
            <summary>
            Class MDataSet. The Tables Collections.
            </summary>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Schema.MDataSet.Tables">
            <summary>
            Gets or sets the tables.
            </summary>
            <value>The tables.</value>
        </member>
        <member name="T:Cocon90.Db.Common.Data.Schema.MDataTable">
            <summary>
            Class MDataTable.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MDataTable.#ctor(System.Collections.Generic.List{Cocon90.Db.Common.Data.Schema.MColumn})">
            <summary>
            Initializes a new instance of the <see cref="T:Cocon90.Db.Common.Data.Schema.MDataTable"/> class.
            </summary>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Schema.MDataTable.Columns">
            <summary>
            Gets or sets the columns.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Schema.MDataTable.Rows">
            <summary>
            Gets or sets the rows.
            </summary>
            <value>The rows.</value>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MDataTable.AddRow(System.Collections.Generic.IEnumerable{Cocon90.Db.Common.Data.Schema.MCell})">
            <summary>
            Add a row to this table.
            </summary>
            <param name="cells"></param>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MDataTable.ContainsColumn(System.String)">
            <summary>
            Return is contains columnName.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MDataTable.ColumnIndexOf(System.String)">
            <summary>
            Return is columnName index.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Db.Common.Data.Schema.MRow">
            <summary>
            Class MRow.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MRow.#ctor(System.Collections.Generic.List{Cocon90.Db.Common.Data.Schema.MColumn})">
            <summary>
            Initializes a new instance of the <see cref="T:Cocon90.Db.Common.Data.Schema.MRow"/> class.
            </summary>
            <param name="columns">The columns.</param>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Schema.MRow.Item(System.Int32)">
            <summary>
            Get the cell.
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Schema.MRow.Item(System.String)">
            <summary>
            Get the cell.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Schema.MRow.Columns">
            <summary>
            Gets or sets the columns.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Cocon90.Db.Common.Data.Schema.MRow.Cells">
            <summary>
            Gets or sets the cells.
            </summary>
            <value>The cells.</value>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MRow.AddCell(Cocon90.Db.Common.Data.Schema.MColumn,System.Object)">
            <summary>
            add the cell.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MRow.ContainsColumn(System.String)">
            <summary>
            Return is contains columnName.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Db.Common.Data.Schema.MRow.ColumnIndexOf(System.String)">
            <summary>
            Return is columnName index.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Db.Common.Db.GetDataHelper(System.String,System.String,System.String)">
            <summary>
            Gets the data helper. 
            <para>If MySQL DB dbType is "Mysql" dbConnString  like "Server=127.0.0.1;Port=3306;Database=world;Uid=root;Pwd=123456;" </para> 
            <para>If MsSql DB dbType is "SqlServer" dbConnString  like "Server=127.0.0.1;Database=world;Uid=sa;Pwd=123456;" </para> 
            <para>If Sqlite DB dbType is "Sqlite" dbConnString  like "Data Source=${app}\\testdb.db3" </para> 
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Db.GetDataHelper(System.String,System.String)">
            <summary>
            Gets the data helper. 
            <para>If MySQL DB dbType is "Mysql" dbConnString  like "Server=127.0.0.1;Port=3306;Database=world;Uid=root;Pwd=123456;" </para> 
            <para>If MsSql DB dbType is "SqlServer" dbConnString  like "Server=127.0.0.1;Port=3306;Database=world;Uid=root;Pwd=123456;" </para> 
            <para>If Sqlite DB dbType is "Sqlite" dbConnString  like "Data Source=${app}\\testdb.db3" </para> 
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Db.GetDataHelper(Cocon90.Db.Common.Data.DbTypeEnum,System.String)">
            <summary>
            Gets the data helper. 
            <para>If MySQL DB dbType is "Mysql" dbConnString  like "Server=127.0.0.1;Port=3306;Database=world;Uid=root;Pwd=123456;" </para> 
            <para>If MsSql DB dbType is "SqlServer" dbConnString  like "Server=127.0.0.1;Port=3306;Database=world;Uid=root;Pwd=123456;" </para> 
            <para>If Sqlite DB dbType is "Sqlite" dbConnString  like "Data Source=${app}\\testdb.db3" </para> 
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Helper.DataHelper.#ctor(Cocon90.Db.Common.Driver.BaseDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:Cocon90.Db.Common.Helper.DataHelper"/> class.
            </summary>
            <param name="driver">The driver.</param>
            <exception cref="T:System.Data.NoNullAllowedException">driver can not be null.</exception>
        </member>
        <member name="P:Cocon90.Db.Common.Helper.DataHelper.Driver">
            <summary>
            Gets or sets the driver.
            </summary>
            <value>The driver.</value>
        </member>
        <member name="M:Cocon90.Db.Common.Helper.DataHelper.ExecBatch(System.Collections.Generic.IEnumerable{Cocon90.Db.Common.Data.SqlBatch},System.Boolean,System.Boolean)">
            <summary>
            Executes the batch. if success it will return a number greater than 0. otherwise it will threw a exception.
            </summary>
            <param name="sqlBatch">The SQL batch.</param>
            <param name="isCommit">if set to <c>true</c> [is commit].</param>
            <param name="allowThrowException">if set to <c>true</c> [allow throw exception].</param>
            <returns>System.Int32.</returns>
            <exception cref="T:Cocon90.Db.Common.Exceptions.SqlBatchExecuteException"></exception>
        </member>
        <member name="M:Cocon90.Db.Common.Helper.DataHelper.GetScalar(System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the scalar.
            </summary>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Cocon90.Db.Common.Helper.DataHelper.ExecNoQuery(System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Executes the no query. if success it will return a number equal or greater than 0. otherwise it will threw a exception.
            </summary>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Cocon90.Db.Common.Helper.DataHelper.GetDataSet(System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the data set.
            </summary>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>DataSet.</returns>
        </member>
        <member name="T:Cocon90.Db.Common.IDataHelper">
            <summary>
            Database connection operate helper.
            </summary>
        </member>
        <member name="P:Cocon90.Db.Common.IDataHelper.Driver">
            <summary>
            The base operate from database.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.IDataHelper.ExecBatch(System.Collections.Generic.IEnumerable{Cocon90.Db.Common.Data.SqlBatch},System.Boolean,System.Boolean)">
            <summary>
            execute sqls use a transaction.
            </summary>
            <param name="sqlBatch">the sql with it's params.</param>
            <param name="isCommit">is commit on finish.</param>
            <param name="allowThrowException">is throw exception allowed.</param>
            <returns>it's will return the sqls count before error.</returns>
        </member>
        <member name="M:Cocon90.Db.Common.IDataHelper.ExecNoQuery(System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            execute a sql return cmd.ExecuteNonQuery result.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cocon90.Db.Common.IDataHelper.GetDataSet(System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            get a datatable collections.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.IDataHelper.GetScalar(System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            get a object.
            </summary>
        </member>
        <member name="T:Cocon90.Db.Common.Tools.AttributeHelper">
            <summary>
            attribute helper.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.AttributeHelper.GetProp2ColumnNameDics(Cocon90.Db.Common.Data.DirverType,System.Type)">
            <summary>
            Gets the column names.the key is PropertyName and the value is ColumnName.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.AttributeHelper.GetColumn2IndexNameDics(Cocon90.Db.Common.Data.DirverType,System.Type)">
            <summary>
            Gets the index names.the key is PropertyName and the value is IndexName.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.AttributeHelper.GetColumn2PropNameDics(Cocon90.Db.Common.Data.DirverType,System.Type)">
            <summary>
            Gets the column names.the key is ColumnName and the value is PropertyName.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.AttributeHelper.GetPropertyName2DDLs(Cocon90.Db.Common.Data.DirverType,System.Type,System.Func{System.Type,System.Int32,System.String})">
            <summary>
            Gets the create ddl script. the key is PropertyName and the value is CreateDdl.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.AttributeHelper.GetPrimaryKeys(Cocon90.Db.Common.Data.DirverType,System.Type,System.Boolean)">
            <summary>
            Gets the primary keys.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.AttributeHelper.GetIgnorePropertys(System.Type)">
            <summary>
            Gets the ignore columns but only with can read and can write property.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.AttributeHelper.GetTableName(System.Type,System.Boolean,System.Func{System.String,System.String})">
            <summary>
            Gets the name of the table. with schemaName.tableName, if you set safeNameFunc it can return like `schemaName`.`tableName` on mysql.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.AttributeHelper.GetParamsArrayByModel(Cocon90.Db.Common.IDataHelper,System.Object)">
            <summary>
            Get the parameters by a model object.
            </summary>
            <param name="dh"></param>
            <param name="paramUsingModel"></param>
            <returns></returns>
        </member>
        <member name="T:Cocon90.Db.Common.Tools.MemcacheHelper`1">
            <summary>
            Cache helper.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.MemcacheHelper`1.ReadAndWrite(System.String,System.Func{`0})">
            <summary>
            get or set data by key from cache
            </summary>
        </member>
        <member name="T:Cocon90.Db.Common.Tools.ModelHelper">
            <summary>
            Model helper.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.ModelHelper.GetList``1(System.Data.Common.DbDataReader,Cocon90.Db.Common.Data.DirverType)">
            <summary>
            convert to object list.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.ModelHelper.GetList``1(Cocon90.Db.Common.Data.Schema.MDataTable,Cocon90.Db.Common.Data.DirverType)">
            <summary>
            convert to object list
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.ReflectHelper.GetPropertyValues(System.Type,System.Object,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the property values. the key is PropertyName and the value is the parameter obj's value.
            </summary>
        </member>
        <member name="T:Cocon90.Db.Common.Tools.TypeConverter">
            <summary>
            type converter.
            </summary>
        </member>
        <member name="M:Cocon90.Db.Common.Tools.TypeConverter.To(System.Type,System.Object)">
            <summary>
            convert value to targetType.
            </summary>
            <param name="targetType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:System.DataHelperBaseExtension.GetBoolean(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the boolean. 
            </summary>
            <param name="dh">The dh.</param>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns><c>true</c> if on, 1, true, yes, t, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:System.DataHelperBaseExtension.GetDateTime(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the date time. if convert failed threw exception.
            </summary>
            <param name="dh">The dh.</param>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:System.DataHelperBaseExtension.GetDateTimeOffset(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the date time offset. if convert failed return 'DateTimeOffset.MinValue'
            </summary>
            <param name="dh">The dh.</param>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>DateTimeOffset.</returns>
        </member>
        <member name="M:System.DataHelperBaseExtension.GetFloat(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the float. if convert failed threw exception.
            </summary>
            <param name="dh">The dh.</param>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:System.DataHelperBaseExtension.GetDouble(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the double. if convert failed threw exception.
            </summary>
            <param name="dh">The dh.</param>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:System.DataHelperBaseExtension.GetInt(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the int. 
            </summary>
            <param name="dh">The dh.</param>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:System.DataHelperBaseExtension.GetDecimal(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the decimal. 
            </summary>
            <param name="dh">The dh.</param>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>System.Decimal.</returns>
        </member>
        <member name="M:System.DataHelperBaseExtension.GetLong(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the long. 
            </summary>
            <param name="dh">The dh.</param>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>System.Int64.</returns>
        </member>
        <member name="M:System.DataHelperBaseExtension.GetString(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the string. if convert failed return [string.Empty]
            </summary>
            <param name="dh">The dh.</param>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:System.DataHelperBaseExtension.GetTable(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the table. 
            </summary>
            <param name="dh">The dh.</param>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>DataTable.</returns>
        </member>
        <member name="M:System.DataHelperBaseExtension.GetListString(Cocon90.Db.Common.IDataHelper,System.Boolean,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the list string.
            </summary>
            <param name="dh">The dh.</param>
            <param name="isDistinct">if set to <c>true</c> [is distinct].</param>
            <param name="tsqlParamed">The TSQL paramed.</param>
            <param name="paramKeyAndValue">The parameter key and value.</param>
            <returns>List&lt;System.String&gt;.</returns>
        </member>
        <member name="M:System.DataHelperBaseExtension.ExecNoQuery(Cocon90.Db.Common.IDataHelper,System.String,System.Object)">
            <summary>
            Executes the no query. but the parameter using model.
            </summary>
        </member>
        <member name="M:System.DataHelperDdlExtension.GetCreateTableSql``1(Cocon90.Db.Common.IDataHelper)">
            <summary>
            Gets the create table SQL.
            </summary>
        </member>
        <member name="M:System.DataHelperDdlExtension.GetUpdateTableSql``1(Cocon90.Db.Common.IDataHelper)">
            <summary>
            Gets the update table SQL.
            </summary>
        </member>
        <member name="M:System.DataHelperDdlExtension.GetCreateTableSql(Cocon90.Db.Common.IDataHelper,System.Type)">
            <summary>
            Gets the create table SQL.
            </summary>
        </member>
        <member name="M:System.DataHelperDdlExtension.GetUpdateTableSql(Cocon90.Db.Common.IDataHelper,System.Type)">
            <summary>
            Gets the update table schema SQL.
            </summary>
        </member>
        <member name="M:System.DataHelperDdlExtension.CreateOrUpdateTable``1(Cocon90.Db.Common.IDataHelper)">
            <summary>
            Create or update table schema. if success it will return a number greater than 0. otherwise it will threw a exception.
            </summary>
        </member>
        <member name="M:System.DataHelperDdlExtension.CreateOrUpdateTable(Cocon90.Db.Common.IDataHelper,System.Type)">
            <summary>
            Create or update table schema.if success it will return a number greater than 0. otherwise it will threw a exception.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmExtension.Delete``1(Cocon90.Db.Common.IDataHelper,``0)">
            <summary>
            Deletes the specified model.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmExtension.Delete``1(Cocon90.Db.Common.IDataHelper,``0,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Deletes table rows by the specified model.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmExtension.Delete``1(Cocon90.Db.Common.IDataHelper,``0,System.String,System.Object)">
            <summary>
            Deletes table rows by the specified model.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmExtension.DeleteByPrimaryKey``1(Cocon90.Db.Common.IDataHelper,System.String,System.Object[])">
            <summary>
            Deletes table rows the by primary key.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmExtension.DeleteByWhere``1(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Deletes table rows the by where.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmExtension.DeleteByWhere``1(Cocon90.Db.Common.IDataHelper,System.String,System.Object)">
            <summary>
            Deletes table rows the by where.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetList``1(Cocon90.Db.Common.IDataHelper)">
            <summary>
            Gets the list.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetList``1(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the list.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetList``1(Cocon90.Db.Common.IDataHelper,System.String,System.Object)">
            <summary>
            Gets the list.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetPagedResult``1(Cocon90.Db.Common.IDataHelper,System.String,System.String,System.Boolean,System.Int32,System.Int32,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the paged result.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetPagedResult``1(Cocon90.Db.Common.IDataHelper,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Object)">
            <summary>
            Gets the paged result.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetPagedResult(Cocon90.Db.Common.IDataHelper,System.String,System.String,System.Boolean,System.Int32,System.Int32,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the paged result.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetPagedResult(Cocon90.Db.Common.IDataHelper,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Object)">
            <summary>
            Gets the paged result.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetListByWhere``1(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the list by where.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetListByWhere``1(Cocon90.Db.Common.IDataHelper,System.String,System.Object)">
            <summary>
            Gets the list by where.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetOne``1(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the one.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetOne``1(Cocon90.Db.Common.IDataHelper,System.String,System.Object)">
            <summary>
            Gets the one.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetOneByWhere``1(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the one by where.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetOneByWhere``1(Cocon90.Db.Common.IDataHelper,System.String,System.Object)">
            <summary>
            Gets the one by where.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetOneByPrimaryKey``1(Cocon90.Db.Common.IDataHelper,System.Object[])">
            <summary>
            Gets the one by primary key.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetInsertSql``1(Cocon90.Db.Common.IDataHelper,``0[])">
            <summary>
            Gets the insert SQL.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetSaveSql``1(Cocon90.Db.Common.IDataHelper,``0[])">
            <summary>
            Gets the insert or replace SQL.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetUpdateSql``1(Cocon90.Db.Common.IDataHelper,``0,System.Boolean,System.String)">
            <summary>
            Gets the update SQL.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetUpdateSqlByPrimaryKey``1(Cocon90.Db.Common.IDataHelper,``0,System.Boolean,System.String,System.Object[])">
            <summary>
            Gets the update SQL by primary key.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetUpdateSqlByWhere``1(Cocon90.Db.Common.IDataHelper,``0,System.Boolean,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the update SQL by where.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetUpdateSqlByWhere``1(Cocon90.Db.Common.IDataHelper,``0,System.Boolean,System.String,System.Object)">
            <summary>
            Gets the update SQL by where.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetDeleteSqlByWhere``1(Cocon90.Db.Common.IDataHelper,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the delete SQL by where.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetDeleteSqlByWhere``1(Cocon90.Db.Common.IDataHelper,System.String,System.Object)">
            <summary>
            Gets the delete SQL by where.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetDeleteSqlByPrimaryKey``1(Cocon90.Db.Common.IDataHelper,System.String,System.Object[])">
            <summary>
            Gets the delete SQL by primary key.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetDeleteSql``1(Cocon90.Db.Common.IDataHelper,``0,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Gets the delete SQL.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmGetExtension.GetDeleteSql``1(Cocon90.Db.Common.IDataHelper,``0,System.String,System.Object)">
            <summary>
            Gets the delete SQL.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmInsertExtension.Insert``1(Cocon90.Db.Common.IDataHelper,``0[])">
            <summary>
            Inserts by the specified models.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmInsertExtension.Save``1(Cocon90.Db.Common.IDataHelper,``0[])">
            <summary>
            Inserts or Replace into tables by the specified models.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmUpdateExtension.Update``1(Cocon90.Db.Common.IDataHelper,``0,System.Boolean,System.String)">
            <summary>
            Updates by the specified model.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmUpdateExtension.Update``1(Cocon90.Db.Common.IDataHelper,``0[],System.Boolean,System.String)">
            <summary>
            Updates by the specified models.
            </summary>
        </member>
        <!-- 对于成员“M:System.DataHelperOrmUpdateExtension.UpdateByPrimaryKey``1(Cocon90.Db.Common.IDataHelper,``0,System.Boolean,System.String,System.Object[])”忽略有格式错误的 XML 注释 -->
        <member name="M:System.DataHelperOrmUpdateExtension.UpdateByByWhere``1(Cocon90.Db.Common.IDataHelper,``0,System.Boolean,System.String,Cocon90.Db.Common.Data.Params[])">
            <summary>
            Updates the by by where.
            </summary>
        </member>
        <member name="M:System.DataHelperOrmUpdateExtension.UpdateByByWhere``1(Cocon90.Db.Common.IDataHelper,``0,System.Boolean,System.String,System.Object)">
            <summary>
            Updates the by by where.
            </summary>
        </member>
        <member name="M:System.ArrayExtensions.ConvertToAll``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            将传入的结果，转换为指定类型的List输出。
            </summary>
        </member>
    </members>
</doc>
